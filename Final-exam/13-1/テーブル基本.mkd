## 関係データベースの基本概念

### 1. テーブル構造
- 関係（リレーショナル）データベースでは、データは2次元の表形式「テーブル（table）」に整理・格納される。
- テーブルの1行は1データを表し、**タプル（tuple）** または **レコード（record）** と呼ばれる。

## データ型
- NULL。HikakinTVで値とか言ったことあんまないけど、値がナイ!

- INTEGER。値は符号付き整数で、値の大きさに応じて 0、1、2、3、4、6、または 8 バイトに格納されます。

- REAL。値は浮動小数点値であり、8 バイトの IEEE 浮動小数点数として保存されます。

- TEXT。値はテキスト文字列であり、データベース エンコード (UTF-8、UTF-16BE、または UTF-16LE) を使用して保存されます。

- BLOB。入力されたとおりに保存されます。

# テーブルの例: 学生情報

| 学籍番号 (Student ID) | 名前 (Name)   | 学年 (Grade) | 専攻 (Major)    |
|-----------------------|--------------|--------------|-----------------|
| 001                   | 山田 太郎     | 1年          | コンピュータ科学 |
| 002                   | 鈴木 花子     | 2年          | 経済学          |
| 003                   | 佐藤 一郎     | 3年          | 電子工学        |
| 004                   | 高橋 美咲     | 4年          | 法学            |

- 各列（カラム）は属性（attributes）{フィールド(field)}を表し、「学籍番号」「名前」「学年」「専攻」が設定されています。
- 学籍番号（Student ID）は各学生を一意に識別するための 主キー（Primary Key） として使用可能。


### 2. データ間の関連付け
- 複数のテーブル間のデータは **外部キー（foreign key）** を使って関連付ける。
- 外部キー制約により、参照整合性が維持され、参照元または参照先が不正な状態になることを防ぐ。

### 3. キーの役割
- 関係データベースでは、全く同じタプルが存在してはいけない。
- 他のタプルと区別できる属性や属性の組み合わせを **キー（key）** と呼ぶ。
  - 例: 学籍番号、または市区町村名と都道府県名の組み合わせなど。


